{"ast":null,"code":"import _defineProperty from \"/home/ctapang/dapp-scaffold/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/ctapang/dapp-scaffold/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ctapang/dapp-scaffold/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ctapang/dapp-scaffold/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar _TokenListProvider$st;\n\nimport { fetch } from 'cross-fetch';\nimport tokenlist from './../tokens/solana.tokenlist.json';\nexport var ENV;\n\n(function (ENV) {\n  ENV[ENV[\"MainnetBeta\"] = 101] = \"MainnetBeta\";\n  ENV[ENV[\"Testnet\"] = 102] = \"Testnet\";\n  ENV[ENV[\"Devnet\"] = 103] = \"Devnet\";\n})(ENV || (ENV = {}));\n\nexport var CLUSTER_SLUGS = {\n  'mainnet-beta': ENV.MainnetBeta,\n  testnet: ENV.Testnet,\n  devnet: ENV.Devnet\n};\nexport var GitHubTokenListResolutionStrategy = function GitHubTokenListResolutionStrategy() {\n  var _this = this;\n\n  _classCallCheck(this, GitHubTokenListResolutionStrategy);\n\n  this.repositories = ['https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json'];\n  this.resolve = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", queryJsonFiles(_this.repositories));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\nexport var CDNTokenListResolutionStrategy = function CDNTokenListResolutionStrategy() {\n  var _this2 = this;\n\n  _classCallCheck(this, CDNTokenListResolutionStrategy);\n\n  this.repositories = ['https://cdn.jsdelivr.net/gh/solana-labs/token-list@main/src/tokens/solana.tokenlist.json'];\n  this.resolve = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", queryJsonFiles(_this2.repositories));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n};\n\nvar queryJsonFiles = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(files) {\n    var responses;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Promise.all(files.map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(repo) {\n                var response, json;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return fetch(repo);\n\n                      case 3:\n                        response = _context3.sent;\n                        _context3.next = 6;\n                        return response.json();\n\n                      case 6:\n                        json = _context3.sent;\n                        return _context3.abrupt(\"return\", json);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        console.info(\"@solana/token-registry: falling back to static repository.\");\n                        return _context3.abrupt(\"return\", tokenlist);\n\n                      case 14:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 10]]);\n              }));\n\n              return function (_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n            responses = _context4.sent;\n            return _context4.abrupt(\"return\", responses.map(function (tokenlist) {\n              return tokenlist.tokens;\n            }).reduce(function (acc, arr) {\n              return acc.concat(arr);\n            }, []));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function queryJsonFiles(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport var Strategy;\n\n(function (Strategy) {\n  Strategy[\"GitHub\"] = \"GitHub\";\n  Strategy[\"Static\"] = \"Static\";\n  Strategy[\"Solana\"] = \"Solana\";\n  Strategy[\"CDN\"] = \"CDN\";\n})(Strategy || (Strategy = {}));\n\nexport var SolanaTokenListResolutionStrategy = function SolanaTokenListResolutionStrategy() {\n  _classCallCheck(this, SolanaTokenListResolutionStrategy);\n\n  this.resolve = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            throw new Error(\"Not Implemented Yet.\");\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n};\nexport var StaticTokenListResolutionStrategy = function StaticTokenListResolutionStrategy() {\n  _classCallCheck(this, StaticTokenListResolutionStrategy);\n\n  this.resolve = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", tokenlist.tokens);\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n};\nexport var TokenListProvider = function TokenListProvider() {\n  _classCallCheck(this, TokenListProvider);\n\n  this.resolve = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n    var strategy,\n        _args7 = arguments;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            strategy = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : Strategy.CDN;\n            _context7.t0 = TokenListContainer;\n            _context7.next = 4;\n            return TokenListProvider.strategies[strategy].resolve();\n\n          case 4:\n            _context7.t1 = _context7.sent;\n            return _context7.abrupt(\"return\", new _context7.t0(_context7.t1));\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n};\nTokenListProvider.strategies = (_TokenListProvider$st = {}, _defineProperty(_TokenListProvider$st, Strategy.GitHub, new GitHubTokenListResolutionStrategy()), _defineProperty(_TokenListProvider$st, Strategy.Static, new StaticTokenListResolutionStrategy()), _defineProperty(_TokenListProvider$st, Strategy.Solana, new SolanaTokenListResolutionStrategy()), _defineProperty(_TokenListProvider$st, Strategy.CDN, new CDNTokenListResolutionStrategy()), _TokenListProvider$st);\nexport var TokenListContainer = function TokenListContainer(tokenList) {\n  var _this3 = this;\n\n  _classCallCheck(this, TokenListContainer);\n\n  this.tokenList = tokenList;\n\n  this.filterByTag = function (tag) {\n    return new TokenListContainer(_this3.tokenList.filter(function (item) {\n      return (item.tags || []).includes(tag);\n    }));\n  };\n\n  this.filterByChainId = function (chainId) {\n    return new TokenListContainer(_this3.tokenList.filter(function (item) {\n      return item.chainId === chainId;\n    }));\n  };\n\n  this.excludeByChainId = function (chainId) {\n    return new TokenListContainer(_this3.tokenList.filter(function (item) {\n      return item.chainId !== chainId;\n    }));\n  };\n\n  this.excludeByTag = function (tag) {\n    return new TokenListContainer(_this3.tokenList.filter(function (item) {\n      return !(item.tags || []).includes(tag);\n    }));\n  };\n\n  this.filterByClusterSlug = function (slug) {\n    if (slug in CLUSTER_SLUGS) {\n      return _this3.filterByChainId(CLUSTER_SLUGS[slug]);\n    }\n\n    throw new Error(\"Unknown slug: \".concat(slug, \", please use one of \").concat(Object.keys(CLUSTER_SLUGS)));\n  };\n\n  this.getList = function () {\n    return _this3.tokenList;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}