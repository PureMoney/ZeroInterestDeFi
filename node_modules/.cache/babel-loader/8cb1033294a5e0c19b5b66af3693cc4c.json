{"ast":null,"code":"var MersenneTwister = require('mersenne-twister');\n\nvar paperGen = require('./paper');\n\nvar Color = require('color');\n\nvar colors = require('./colors');\n\nvar shapeCount = 4;\nmodule.exports = generateIdenticon;\nvar generator;\n\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n  var elements = paperGen(diameter);\n  var paper = elements.paper;\n  var container = elements.container;\n  var remainingColors = hueShift(colors.slice(), generator);\n  var bkgnd = paper.rect(0, 0, diameter, diameter);\n  bkgnd.attr(\"fill\", genColor(remainingColors));\n  bkgnd.attr('stroke', 'none');\n\n  for (var i = 0; i < shapeCount - 1; i++) {\n    genShape(paper, remainingColors, diameter, i, shapeCount - 1);\n  }\n\n  return container;\n}\n\nfunction genShape(paper, remainingColors, diameter, i, total) {\n  var shape = paper.rect(0, 0, diameter, diameter);\n  shape.rotate(360 * generator.random());\n  var trans = diameter / total * generator.random() + i * diameter / total;\n  shape.translate(trans);\n  shape.rotate(180 * generator.random());\n  shape.attr('fill', genColor(remainingColors));\n  shape.attr('stroke', 'none');\n}\n\nfunction genColor(colors) {\n  var rand = generator.random();\n  var idx = Math.floor(colors.length * generator.random());\n  var color = colors.splice(idx, 1)[0];\n  return color;\n}\n\nvar wobble = 30;\n\nfunction hueShift(colors, generator) {\n  var amount = generator.random() * 30 - wobble / 2;\n  return colors.map(function (hex) {\n    var color = Color(hex);\n    color.rotate(amount);\n    return color.hexString();\n  });\n}","map":null,"metadata":{},"sourceType":"script"}