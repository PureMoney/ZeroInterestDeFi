{"ast":null,"code":"import _slicedToArray from\"/home/ctapang/dapp-scaffold/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{cache}from\"../contexts/accounts\";import{useMarkets}from\"../contexts/market\";import{fromLamports}from\"../utils/utils\";import{useUserAccounts}from\"./useUserAccounts\";export function useUserTotalBalance(){var _useUserAccounts=useUserAccounts(),userAccounts=_useUserAccounts.userAccounts;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),balanceInUSD=_useState2[0],setBalanceInUSD=_useState2[1];var _useMarkets=useMarkets(),marketEmitter=_useMarkets.marketEmitter,midPriceInUSD=_useMarkets.midPriceInUSD;useEffect(function(){var updateBalance=function updateBalance(){var total=0;for(var i=0;i<userAccounts.length;i++){var account=userAccounts[i];var mintAddress=account.info.mint.toBase58();var mint=cache.get(mintAddress);if(mint){var balance=fromLamports(account.info.amount.toNumber(),mint.info);total+=balance*midPriceInUSD(mintAddress);}}setBalanceInUSD(total);};var dispose=marketEmitter.onMarket(function(args){updateBalance();});updateBalance();return function(){dispose();};},[userAccounts,marketEmitter,midPriceInUSD,setBalanceInUSD]);return{balanceInUSD:balanceInUSD,accounts:userAccounts,hasBalance:userAccounts.length>0&&balanceInUSD>0};}","map":null,"metadata":{},"sourceType":"module"}